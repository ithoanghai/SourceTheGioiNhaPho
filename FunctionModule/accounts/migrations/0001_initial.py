# Generated by Django 4.1.3 on 2022-12-07 10:21
import allauth.socialaccount.fields
import FunctionModule.accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(error_messages={'unique': 'Người dùng này đã tồn tại trên hệ thống.'}, help_text='Bắt buộc nhập. Không quá 150 ký tự. Có thể bao gồm ký tự, chữ số và chỉ ký tự đặc biệt @/./+/-/_.', max_length=150, unique=True, verbose_name='Tên đăng nhập')),
                ('password', models.CharField(max_length=128, verbose_name='Mật khẩu')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Email này đã được sử dụng trên hệ thống.'}, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Họ Đệm')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Tên')),
                ('phone', models.CharField(db_index=True, error_messages={'unique': 'Số điện thoại này đã được sử dụng trên hệ thống.'}, max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Số điện thoại 10 số với chỉ các đầu số 09|03|07|08|05', regex='^(09|03|07|08|05)+([0-9]{8})$')], verbose_name='Điện thoại')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Địa chỉ nơi ở')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Ngày sinh')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Nam'), ('female', 'Nữ')], default='male', max_length=20, verbose_name='Giới tính')),
                ('bio', models.TextField(blank=True, verbose_name='Giới thiệu bản thân')),
                ('avatar', models.ImageField(blank=True, upload_to='photos/avatar/', verbose_name='Ảnh đại diện')),
                ('is_broker', models.BooleanField(default=False, verbose_name='MUỐN LÀM MÔI GIỚI')),
                ('is_investor', models.BooleanField(default=False, verbose_name='MUỐN LÀM ĐẦU TƯ')),
                ('is_active', models.BooleanField(default=True, verbose_name='ĐÃ KÍCH HOẠT')),
                ('is_staff', models.BooleanField(default=False, verbose_name='LÀ CHUYÊN VIÊN TGNP')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='LÀ QUẢN TRỊ HỆ THỐNG')),
                ('first_time', models.BooleanField(default=True, verbose_name='Đăng nhập lần đầu')),
                ('date_joined', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Ngày gia nhập')),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Đăng nhập lần cuối')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Người dùng',
                'verbose_name_plural': 'Người dùng',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='địa chỉ e-mail')),
                ('verified', models.BooleanField(default=False, verbose_name='đã xác minh')),
                ('primary', models.BooleanField(default=False, verbose_name='chính')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='người sử dụng')),
            ],
            options={
                'verbose_name': 'địa chỉ email',
                'verbose_name_plural': 'địa chỉ email',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
            ],
            options={
                'verbose_name': 'Phân Nhóm Người dùng',
                'verbose_name_plural': 'Phân Nhóm Người dùng',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('permission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.permission')),
            ],
            options={
                'verbose_name': 'Phân Quyền Người dùng',
                'verbose_name_plural': 'Phân Quyền Người dùng',
            },
            bases=('auth.permission',),
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[], max_length=30, verbose_name='provider')),
                ('uid', models.CharField(max_length=191, verbose_name='uid')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('extra_data', allauth.socialaccount.fields.JSONField(default=dict, verbose_name='extra data')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'social account',
                'verbose_name_plural': 'social accounts',
                'unique_together': {('provider', 'uid')},
            },
        ),
        migrations.CreateModel(
            name='SocialApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[], max_length=30, verbose_name='provider')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('client_id', models.CharField(help_text='App ID, or consumer key', max_length=191, verbose_name='client id')),
                ('secret', models.CharField(blank=True, help_text='API secret, client secret, or consumer secret', max_length=191, verbose_name='secret key')),
                ('key', models.CharField(blank=True, help_text='Key', max_length=191, verbose_name='key')),
                ('sites', models.ManyToManyField(blank=True, to='sites.site')),
            ],
            options={
                'verbose_name': 'ứng dụng xã hội',
                'verbose_name_plural': 'ứng dụng xã hội',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investment_point', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Điểm đầu tư')),
                ('investment_account', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999999)], verbose_name='Tài khoản có đầu tư (Triệu đồng)')),
                ('prestige_points', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Điểm uy tín')),
                ('potential_points', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Điểm tiềm năng')),
                ('bds_referral_point', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Điểm giới thiệu BĐS')),
                ('customer_referral_point', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Điểm giới thiệu khách')),
                ('user', models.OneToOneField(blank=True, db_constraint=FunctionModule.accounts.models.User, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Điểm số',
                'verbose_name_plural': 'Điểm đạt được',
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Tạo')),
                ('sent', models.DateTimeField(null=True, verbose_name='Gửi')),
                ('key', models.CharField(max_length=64, unique=True, verbose_name='key')),
                ('email_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.emailaddress', verbose_name='địa chỉ e-mail')),
            ],
            options={
                'verbose_name': 'Xác nhận email',
                'verbose_name_plural': 'Xác nhận email',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='permissions',
            field=models.ManyToManyField(blank=True, help_text='Xác định quyền cho người dùng này.', related_name='user_permissions', related_query_name='user', to='accounts.permissions', verbose_name='Quyền người dùng'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='SocialToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField(help_text='"oauth_token" (OAuth1) or access token (OAuth2)', verbose_name='token')),
                ('token_secret', models.TextField(blank=True, help_text='"oauth_token_secret" (OAuth1) or refresh token (OAuth2)', verbose_name='token secret')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.socialaccount')),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.socialapp')),
            ],
            options={
                'verbose_name': 'social application token',
                'verbose_name_plural': 'social application tokens',
                'unique_together': {('app', 'account')},
            },
        ),
    ]
