# Generated by Django 4.1.3 on 2022-12-07 10:21

import FunctionModule.hitcount.models
import FunctionModule.listings.models
import datetime
from django.conf import settings
import django.contrib.gis.geos.point
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields
import location_field.models.spatial


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('realtors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_path', models.TextField(blank=True, null=True)),
                ('transaction_type', models.CharField(choices=[('sell', 'Bán'), ('rent', 'Cho thuê'), ('project', 'Dự án')], default='sell', max_length=20, verbose_name='Hình thức giao dịch *')),
                ('house_type', models.CharField(choices=[('street_house', 'Nhà mặt phố'), ('town_house', 'Nhà phố'), ('loft_house', 'Nhà 1 tầng/Cấp 4'), ('shop_house', 'Cửa hàng/ShopHouse'), ('apartment', 'Căn hộ/Chung cư MN/Nhà tập thể'), ('villa', 'Biệt thự'), ('plot', 'Liền kề/Phân lô/Dịch vụ'), ('land', 'Đất nền'), ('building', 'Toà nhà'), ('building_business', 'Toà nhà kinh doanh'), ('office', 'Văn phòng'), ('office_tel', 'Văn phòng khách sạn'), ('condo_tel', 'Căn hộ khách sạn'), ('service_apartment', 'Căn hộ dịch vụ'), ('pent_house', 'Căn hộ áp mái'), ('villa_rest', 'Biệt thự nghỉ dưỡng'), ('land_business', 'Mặt bằng kinh doanh'), ('industrial_land', 'Đất công nghiệp'), ('warehouse_workshop', 'Kho xưởng'), ('other', 'Khác')], default='town_house', max_length=20, verbose_name='Loại BĐS *')),
                ('state', models.CharField(choices=[('01', 'Hà Nội'), ('02', 'Hà Giang'), ('04', 'Cao Bằng'), ('06', 'Bắc Kạn'), ('08', 'Tuyên Quang'), ('10', 'Lào Cai'), ('11', 'Điện Biên'), ('12', 'Lai Châu'), ('14', 'Sơn La'), ('15', 'Yên Bái'), ('17', 'Hoà Bình'), ('19', 'Thái Nguyên'), ('20', 'Lạng Sơn'), ('22', 'Quảng Ninh'), ('24', 'Bắc Giang'), ('25', 'Phú Thọ'), ('26', 'Vĩnh Phúc'), ('27', 'Bắc Ninh'), ('30', 'Hải Dương'), ('31', 'Hải Phòng'), ('33', 'Hưng Yên'), ('34', 'Thái Bình'), ('35', 'Hà Nam'), ('36', 'Nam Định'), ('37', 'Ninh Bình'), ('38', 'Thanh Hóa'), ('40', 'Nghệ An'), ('42', 'Hà Tĩnh'), ('44', 'Quảng Bình'), ('45', 'Quảng Trị'), ('46', 'Thừa Thiên Huế'), ('48', 'Đà Nẵng'), ('49', 'Quảng Nam'), ('51', 'Quảng Ngãi'), ('52', 'Bình Định'), ('54', 'Phú Yên'), ('56', 'Khánh Hòa'), ('58', 'Ninh Thuận'), ('60', 'Bình Thuận'), ('62', 'Kon Tum'), ('64', 'Gia Lai'), ('66', 'Đắk Lắk'), ('67', 'Đắk Nông'), ('68', 'Lâm Đồng'), ('70', 'Bình Phước'), ('72', 'Tây Ninh'), ('74', 'Bình Dương'), ('75', 'Đồng Nai'), ('77', 'Bà Rịa - Vũng Tàu'), ('79', 'Hà Nội'), ('80', 'Long An'), ('82', 'Tiền Giang'), ('83', 'Bến Tre'), ('84', 'Trà Vinh'), ('86', 'Vĩnh Long'), ('87', 'Đồng Tháp'), ('89', 'An Giang'), ('91', 'Kiên Giang'), ('92', 'Cần Thơ'), ('93', 'Hậu Giang'), ('94', 'Sóc Trăng'), ('95', 'Bạc Liêu'), ('96', 'Cà Mau')], default='01', max_length=50, verbose_name='Thành phố/Tỉnh *')),
                ('district', models.CharField(choices=[('001', 'Ba Đình'), ('002', 'Hoàn Kiếm'), ('003', 'Tây Hồ'), ('004', 'Long Biên'), ('005', 'Cầu Giấy'), ('006', 'Đống Đa'), ('007', 'Hai Bà Trưng'), ('008', 'Hoàng Mai'), ('009', 'Thanh Xuân'), ('016', 'Sóc Sơn'), ('017', 'Đông Anh'), ('018', 'Gia Lâm'), ('019', 'Nam Từ Liêm'), ('020', 'Thanh Trì'), ('021', 'Bắc Từ Liêm'), ('024', 'Hà Giang'), ('026', 'Đồng Văn'), ('027', 'Mèo Vạc'), ('028', 'Yên Minh'), ('029', 'Quản Bạ'), ('030', 'Vị Xuyên'), ('031', 'Bắc Mê'), ('032', 'Hoàng Su Phì'), ('033', 'Xín Mần'), ('034', 'Bắc Quang'), ('035', 'Quang Bình'), ('040', 'Cao Bằng'), ('042', 'Bảo Lâm'), ('043', 'Bảo Lạc'), ('045', 'Hà Quảng'), ('047', 'Trùng Khánh'), ('048', 'Hạ Lang'), ('049', 'Quảng Hòa'), ('051', 'Hoà An'), ('052', 'Nguyên Bình'), ('053', 'Thạch An'), ('058', 'Bắc Kạn'), ('060', 'Pác Nặm'), ('061', 'Ba Bể'), ('062', 'Ngân Sơn'), ('063', 'Bạch Thông'), ('064', 'Chợ Đồn'), ('065', 'Chợ Mới'), ('066', 'Na Rì'), ('070', 'Tuyên Quang'), ('071', 'Lâm Bình'), ('072', 'Na Hang'), ('073', 'Chiêm Hóa'), ('074', 'Hàm Yên'), ('075', 'Yên Sơn'), ('076', 'Sơn Dương'), ('080', 'Lào Cai'), ('082', 'Bát Xát'), ('083', 'Mường Khương'), ('084', 'Si Ma Cai'), ('085', 'Bắc Hà'), ('086', 'Bảo Thắng'), ('087', 'Bảo Yên'), ('088', 'Sa Pa'), ('089', 'Văn Bàn'), ('094', 'Điện Biên Phủ'), ('095', 'Mường Lay'), ('096', 'Mường Nhé'), ('097', 'Mường Chà'), ('098', 'Tủa Chùa'), ('099', 'Tuần Giáo'), ('100', 'Điện Biên'), ('101', 'Điện Biên Đông'), ('102', 'Mường Ảng'), ('103', 'Nậm Pồ'), ('105', 'Lai Châu'), ('106', 'Tam Đường'), ('107', 'Mường Tè'), ('108', 'Sìn Hồ'), ('109', 'Phong Thổ'), ('110', 'Than Uyên'), ('111', 'Tân Uyên'), ('112', 'Nậm Nhùn'), ('116', 'Sơn La'), ('118', 'Quỳnh Nhai'), ('119', 'Thuận Châu'), ('120', 'Mường La'), ('121', 'Bắc Yên'), ('122', 'Phù Yên'), ('123', 'Mộc Châu'), ('124', 'Yên Châu'), ('125', 'Mai Sơn'), ('126', 'Sông Mã'), ('127', 'Sốp Cộp'), ('128', 'Vân Hồ'), ('132', 'Yên Bái'), ('133', 'Nghĩa Lộ'), ('135', 'Lục Yên'), ('136', 'Văn Yên'), ('137', 'Mù Căng Chải'), ('138', 'Trấn Yên'), ('139', 'Trạm Tấu'), ('140', 'Văn Chấn'), ('141', 'Yên Bình'), ('148', 'Hòa Bình'), ('150', 'Đà Bắc'), ('152', 'Lương Sơn'), ('153', 'Kim Bôi'), ('154', 'Cao Phong'), ('155', 'Tân Lạc'), ('156', 'Mai Châu'), ('157', 'Lạc Sơn'), ('158', 'Yên Thủy'), ('159', 'Lạc Thủy'), ('164', 'Thái Nguyên'), ('165', 'Sông Công'), ('167', 'Định Hóa'), ('168', 'Phú Lương'), ('169', 'Đồng Hỷ'), ('170', 'Võ Nhai'), ('171', 'Đại Từ'), ('172', 'Phổ Yên'), ('173', 'Phú Bình'), ('178', 'Lạng Sơn'), ('180', 'Tràng Định'), ('181', 'Bình Gia'), ('182', 'Văn Lãng'), ('183', 'Cao Lộc'), ('184', 'Văn Quan'), ('185', 'Bắc Sơn'), ('186', 'Hữu Lũng'), ('187', 'Chi Lăng'), ('188', 'Lộc Bình'), ('189', 'Đình Lập'), ('193', 'Hạ Long'), ('194', 'Móng Cái'), ('195', 'Cẩm Phả'), ('196', 'Uông Bí'), ('198', 'Bình Liêu'), ('199', 'Tiên Yên'), ('200', 'Đầm Hà'), ('201', 'Hải Hà'), ('202', 'Ba Chẽ'), ('203', 'Vân Đồn'), ('205', 'Đông Triều'), ('206', 'Quảng Yên'), ('207', 'Cô Tô'), ('213', 'Bắc Giang'), ('215', 'Yên Thế'), ('216', 'Tân Yên'), ('217', 'Lạng Giang'), ('218', 'Lục Nam'), ('219', 'Lục Ngạn'), ('220', 'Sơn Động'), ('221', 'Yên Dũng'), ('222', 'Việt Yên'), ('223', 'Hiệp Hòa'), ('227', 'Việt Trì'), ('228', 'Phú Thọ'), ('230', 'Đoan Hùng'), ('231', 'Hạ Hoà'), ('232', 'Thanh Ba'), ('233', 'Phù Ninh'), ('234', 'Yên Lập'), ('235', 'Cẩm Khê'), ('236', 'Tam Nông'), ('237', 'Lâm Thao'), ('238', 'Thanh Sơn'), ('239', 'Thanh Thuỷ'), ('240', 'Tân Sơn'), ('243', 'Vĩnh Yên'), ('244', 'Phúc Yên'), ('246', 'Lập Thạch'), ('247', 'Tam Dương'), ('248', 'Tam Đảo'), ('249', 'Bình Xuyên'), ('250', 'Mê Linh'), ('251', 'Yên Lạc'), ('252', 'Vĩnh Tường'), ('253', 'Sông Lô'), ('256', 'Bắc Ninh'), ('258', 'Yên Phong'), ('259', 'Quế Võ'), ('260', 'Tiên Du'), ('261', 'Từ Sơn'), ('262', 'Thuận Thành'), ('263', 'Gia Bình'), ('264', 'Lương Tài'), ('268', 'Hà Đông'), ('269', 'Sơn Tây'), ('271', 'Ba Vì'), ('272', 'Phúc Thọ'), ('273', 'Đan Phượng'), ('274', 'Hoài Đức'), ('275', 'Quốc Oai'), ('276', 'Thạch Thất'), ('277', 'Chương Mỹ'), ('278', 'Thanh Oai'), ('279', 'Thường Tín'), ('280', 'Phú Xuyên'), ('281', 'Ứng Hòa'), ('282', 'Mỹ Đức'), ('288', 'Hải Dương'), ('290', 'Chí Linh'), ('291', 'Nam Sách'), ('292', 'Kinh Môn'), ('293', 'Kim Thành'), ('294', 'Thanh Hà'), ('295', 'Cẩm Giàng'), ('296', 'Bình Giang'), ('297', 'Gia Lộc'), ('298', 'Tứ Kỳ'), ('299', 'Ninh Giang'), ('300', 'Thanh Miện'), ('303', 'Hồng Bàng'), ('304', 'Ngô Quyền'), ('305', 'Lê Chân'), ('306', 'Hải An'), ('307', 'Kiến An'), ('308', 'Đồ Sơn'), ('309', 'Dương Kinh'), ('311', 'Thuỷ Nguyên'), ('312', 'An Dương'), ('313', 'An Lão'), ('314', 'Kiến Thuỵ'), ('315', 'Tiên Lãng'), ('316', 'Vĩnh Bảo'), ('317', 'Cát Hải'), ('318', 'Bạch Long Vĩ'), ('323', 'Hưng Yên'), ('325', 'Văn Lâm'), ('326', 'Văn Giang'), ('327', 'Yên Mỹ'), ('328', 'Mỹ Hào'), ('329', 'Ân Thi'), ('330', 'Khoái Châu'), ('331', 'Kim Động'), ('332', 'Tiên Lữ'), ('333', 'Phù Cừ'), ('336', 'Thái Bình'), ('338', 'Quỳnh Phụ'), ('339', 'Hưng Hà'), ('340', 'Đông Hưng'), ('341', 'Thái Thụy'), ('342', 'Tiền Hải'), ('343', 'Kiến Xương'), ('344', 'Vũ Thư'), ('347', 'Phủ Lý'), ('349', 'Duy Tiên'), ('350', 'Kim Bảng'), ('351', 'Thanh Liêm'), ('352', 'Bình Lục'), ('353', 'Lý Nhân'), ('356', 'Nam Định'), ('358', 'Mỹ Lộc'), ('359', 'Vụ Bản'), ('360', 'Ý Yên'), ('361', 'Nghĩa Hưng'), ('362', 'Nam Trực'), ('363', 'Trực Ninh'), ('364', 'Xuân Trường'), ('365', 'Giao Thủy'), ('366', 'Hải Hậu'), ('369', 'Ninh Bình'), ('370', 'Tam Điệp'), ('372', 'Nho Quan'), ('373', 'Gia Viễn'), ('374', 'Hoa Lư'), ('375', 'Yên Khánh'), ('376', 'Kim Sơn'), ('377', 'Yên Mô'), ('380', 'Thanh Hóa'), ('381', 'Bỉm Sơn'), ('382', 'Sầm Sơn'), ('384', 'Mường Lát'), ('385', 'Quan Hóa'), ('386', 'Bá Thước'), ('387', 'Quan Sơn'), ('388', 'Lang Chánh'), ('389', 'Ngọc Lặc'), ('390', 'Cẩm Thủy'), ('391', 'Thạch Thành'), ('392', 'Hà Trung'), ('393', 'Vĩnh Lộc'), ('394', 'Yên Định'), ('395', 'Thọ Xuân'), ('396', 'Thường Xuân'), ('397', 'Triệu Sơn'), ('398', 'Thiệu Hóa'), ('399', 'Hoằng Hóa'), ('400', 'Hậu Lộc'), ('401', 'Nga Sơn'), ('402', 'Như Xuân'), ('403', 'Như Thanh'), ('404', 'Nông Cống'), ('405', 'Đông Sơn'), ('406', 'Quảng Xương'), ('407', 'Nghi Sơn'), ('412', 'Vinh'), ('413', 'Cửa Lò'), ('414', 'Thái Hoà'), ('415', 'Quế Phong'), ('416', 'Quỳ Châu'), ('417', 'Kỳ Sơn'), ('418', 'Tương Dương'), ('419', 'Nghĩa Đàn'), ('420', 'Quỳ Hợp'), ('421', 'Quỳnh Lưu'), ('422', 'Con Cuông'), ('423', 'Tân Kỳ'), ('424', 'Anh Sơn'), ('425', 'Diễn Châu'), ('426', 'Yên Thành'), ('427', 'Đô Lương'), ('428', 'Thanh Chương'), ('429', 'Nghi Lộc'), ('430', 'Nam Đàn'), ('431', 'Hưng Nguyên'), ('432', 'Hoàng Mai'), ('436', 'Hà Tĩnh'), ('437', 'Hồng Lĩnh'), ('439', 'Hương Sơn'), ('440', 'Đức Thọ'), ('441', 'Vũ Quang'), ('442', 'Nghi Xuân'), ('443', 'Can Lộc'), ('444', 'Hương Khê'), ('445', 'Thạch Hà'), ('446', 'Cẩm Xuyên'), ('447', 'Kỳ Anh'), ('448', 'Lộc Hà'), ('449', 'Kỳ Anh'), ('450', 'Đồng Hới'), ('452', 'Minh Hóa'), ('453', 'Tuyên Hóa'), ('454', 'Quảng Trạch'), ('455', 'Bố Trạch'), ('456', 'Quảng Ninh'), ('457', 'Lệ Thủy'), ('458', 'Ba Đồn'), ('461', 'Đông Hà'), ('462', 'Quảng Trị'), ('464', 'Vĩnh Linh'), ('465', 'Hướng Hóa'), ('466', 'Gio Linh'), ('467', 'Đa Krông'), ('468', 'Cam Lộ'), ('469', 'Triệu Phong'), ('470', 'Hải Lăng'), ('471', 'Cồn Cỏ'), ('474', 'Huế'), ('476', 'Phong Điền'), ('477', 'Quảng Điền'), ('478', 'Phú Vang'), ('479', 'Hương Thủy'), ('480', 'Hương Trà'), ('481', 'A Lưới'), ('482', 'Phú Lộc'), ('483', 'Nam Đông'), ('490', 'Liên Chiểu'), ('491', 'Thanh Khê'), ('492', 'Hải Châu'), ('493', 'Sơn Trà'), ('494', 'Ngũ Hành Sơn'), ('495', 'Cẩm Lệ'), ('497', 'Hòa Vang'), ('498', 'Hoàng Sa'), ('502', 'Tam Kỳ'), ('503', 'Hội An'), ('504', 'Tây Giang'), ('505', 'Đông Giang'), ('506', 'Đại Lộc'), ('507', 'Điện Bàn'), ('508', 'Duy Xuyên'), ('509', 'Quế Sơn'), ('510', 'Nam Giang'), ('511', 'Phước Sơn'), ('512', 'Hiệp Đức'), ('513', 'Thăng Bình'), ('514', 'Tiên Phước'), ('515', 'Bắc Trà My'), ('516', 'Nam Trà My'), ('517', 'Núi Thành'), ('518', 'Phú Ninh'), ('519', 'Nông Sơn'), ('522', 'Quảng Ngãi'), ('524', 'Bình Sơn'), ('525', 'Trà Bồng'), ('527', 'Sơn Tịnh'), ('528', 'Tư Nghĩa'), ('529', 'Sơn Hà'), ('530', 'Sơn Tây'), ('531', 'Minh Long'), ('532', 'Nghĩa Hành'), ('533', 'Mộ Đức'), ('534', 'Đức Phổ'), ('535', 'Ba Tơ'), ('536', 'Lý Sơn'), ('540', 'Quy Nhơn'), ('542', 'An Lão'), ('543', 'Hoài Nhơn'), ('544', 'Hoài Ân'), ('545', 'Phù Mỹ'), ('546', 'Vĩnh Thạnh'), ('547', 'Tây Sơn'), ('548', 'Phù Cát'), ('549', 'An Nhơn'), ('550', 'Tuy Phước'), ('551', 'Vân Canh'), ('555', 'Tuy Hoà'), ('557', 'Sông Cầu'), ('558', 'Đồng Xuân'), ('559', 'Tuy An'), ('560', 'Sơn Hòa'), ('561', 'Sông Hinh'), ('562', 'Tây Hoà'), ('563', 'Phú Hoà'), ('564', 'Đông Hòa'), ('568', 'Nha Trang'), ('569', 'Cam Ranh'), ('570', 'Cam Lâm'), ('571', 'Vạn Ninh'), ('572', 'Ninh Hòa'), ('573', 'Khánh Vĩnh'), ('574', 'Diên Khánh'), ('575', 'Khánh Sơn'), ('576', 'Trường Sa'), ('582', 'Phan Rang-Tháp Chàm'), ('584', 'Bác Ái'), ('585', 'Ninh Sơn'), ('586', 'Ninh Hải'), ('587', 'Ninh Phước'), ('588', 'Thuận Bắc'), ('589', 'Thuận Nam'), ('593', 'Phan Thiết'), ('594', 'La Gi'), ('595', 'Tuy Phong'), ('596', 'Bắc Bình'), ('597', 'Hàm Thuận Bắc'), ('598', 'Hàm Thuận Nam'), ('599', 'Tánh Linh'), ('600', 'Đức Linh'), ('601', 'Hàm Tân'), ('602', 'Phú Quí'), ('608', 'Kon Tum'), ('610', 'Đắk Glei'), ('611', 'Ngọc Hồi'), ('612', 'Đắk Tô'), ('613', 'Kon Plông'), ('614', 'Kon Rẫy'), ('615', 'Đắk Hà'), ('616', 'Sa Thầy'), ('617', 'Tu Mơ Rông'), ('618', "Ia H' Drai"), ('622', 'Pleiku'), ('623', 'An Khê'), ('624', 'Ayun Pa'), ('625', 'KBang'), ('626', 'Đăk Đoa'), ('627', 'Chư Păh'), ('628', 'Ia Grai'), ('629', 'Mang Yang'), ('630', 'Kông Chro'), ('631', 'Đức Cơ'), ('632', 'Chư Prông'), ('633', 'Chư Sê'), ('634', 'Đăk Pơ'), ('635', 'Ia Pa'), ('637', 'Krông Pa'), ('638', 'Phú Thiện'), ('639', 'Chư Pưh'), ('643', 'Buôn Ma Thuột'), ('644', 'Buôn Hồ'), ('645', "Ea H'leo"), ('646', 'Ea Súp'), ('647', 'Buôn Đôn'), ('648', "Cư M'gar"), ('649', 'Krông Búk'), ('650', 'Krông Năng'), ('651', 'Ea Kar'), ('652', "M'Đrắk"), ('653', 'Krông Bông'), ('654', 'Krông Pắc'), ('655', 'Krông A Na'), ('656', 'Lắk'), ('657', 'Cư Kuin'), ('660', 'Gia Nghĩa'), ('661', 'Đăk Glong'), ('662', 'Cư Jút'), ('663', 'Đắk Mil'), ('664', 'Krông Nô'), ('665', 'Đắk Song'), ('666', "Đắk R'Lấp"), ('667', 'Tuy Đức'), ('672', 'Đà Lạt'), ('673', 'Bảo Lộc'), ('674', 'Đam Rông'), ('675', 'Lạc Dương'), ('676', 'Lâm Hà'), ('677', 'Đơn Dương'), ('678', 'Đức Trọng'), ('679', 'Di Linh'), ('680', 'Bảo Lâm'), ('681', 'Đạ Huoai'), ('682', 'Đạ Tẻh'), ('683', 'Cát Tiên'), ('688', 'Phước Long'), ('689', 'Đồng Xoài'), ('690', 'Bình Long'), ('691', 'Bù Gia Mập'), ('692', 'Lộc Ninh'), ('693', 'Bù Đốp'), ('694', 'Hớn Quản'), ('695', 'Đồng Phú'), ('696', 'Bù Đăng'), ('697', 'Chơn Thành'), ('698', 'Phú Riềng'), ('703', 'Tây Ninh'), ('705', 'Tân Biên'), ('706', 'Tân Châu'), ('707', 'Dương Minh Châu'), ('708', 'Châu Thành'), ('709', 'Hòa Thành'), ('710', 'Gò Dầu'), ('711', 'Bến Cầu'), ('712', 'Trảng Bàng'), ('718', 'Thủ Dầu Một'), ('719', 'Bàu Bàng'), ('720', 'Dầu Tiếng'), ('721', 'Bến Cát'), ('722', 'Phú Giáo'), ('723', 'Tân Uyên'), ('724', 'Dĩ An'), ('725', 'Thuận An'), ('726', 'Bắc Tân Uyên'), ('731', 'Biên Hòa'), ('732', 'Long Khánh'), ('734', 'Tân Phú'), ('735', 'Vĩnh Cửu'), ('736', 'Định Quán'), ('737', 'Trảng Bom'), ('738', 'Thống Nhất'), ('739', 'Cẩm Mỹ'), ('740', 'Long Thành'), ('741', 'Xuân Lộc'), ('742', 'Nhơn Trạch'), ('747', 'Vũng Tàu'), ('748', 'Bà Rịa'), ('750', 'Châu Đức'), ('751', 'Xuyên Mộc'), ('752', 'Long Điền'), ('753', 'Đất Đỏ'), ('754', 'Phú Mỹ'), ('755', 'Côn Đảo'), ('760', '1'), ('761', '12'), ('764', 'Gò Vấp'), ('765', 'Bình Thạnh'), ('766', 'Tân Bình'), ('767', 'Tân Phú'), ('768', 'Phú Nhuận'), ('769', 'Thủ Đức'), ('770', '3'), ('771', '10'), ('772', '11'), ('773', '4'), ('774', '5'), ('775', '6'), ('776', '8'), ('777', 'Bình Tân'), ('778', '7'), ('783', 'Củ Chi'), ('784', 'Hóc Môn'), ('785', 'Bình Chánh'), ('786', 'Nhà Bè'), ('787', 'Cần Giờ'), ('794', 'Tân An'), ('795', 'Kiến Tường'), ('796', 'Tân Hưng'), ('797', 'Vĩnh Hưng'), ('798', 'Mộc Hóa'), ('799', 'Tân Thạnh'), ('800', 'Thạnh Hóa'), ('801', 'Đức Huệ'), ('802', 'Đức Hòa'), ('803', 'Bến Lức'), ('804', 'Thủ Thừa'), ('805', 'Tân Trụ'), ('806', 'Cần Đước'), ('807', 'Cần Giuộc'), ('808', 'Châu Thành'), ('815', 'Mỹ Tho'), ('816', 'Gò Công'), ('817', 'Cai Lậy'), ('818', 'Tân Phước'), ('819', 'Cái Bè'), ('820', 'Cai Lậy'), ('821', 'Châu Thành'), ('822', 'Chợ Gạo'), ('823', 'Gò Công Tây'), ('824', 'Gò Công Đông'), ('825', 'Tân Phú Đông'), ('829', 'Bến Tre'), ('831', 'Châu Thành'), ('832', 'Chợ Lách'), ('833', 'Mỏ Cày Nam'), ('834', 'Giồng Trôm'), ('835', 'Bình Đại'), ('836', 'Ba Tri'), ('837', 'Thạnh Phú'), ('838', 'Mỏ Cày Bắc'), ('842', 'Trà Vinh'), ('844', 'Càng Long'), ('845', 'Cầu Kè'), ('846', 'Tiểu Cần'), ('847', 'Châu Thành'), ('848', 'Cầu Ngang'), ('849', 'Trà Cú'), ('850', 'Duyên Hải'), ('851', 'Duyên Hải'), ('855', 'Vĩnh Long'), ('857', 'Long Hồ'), ('858', 'Mang Thít'), ('859', 'Vũng Liêm'), ('860', 'Tam Bình'), ('861', 'Bình Minh'), ('862', 'Trà Ôn'), ('863', 'Bình Tân'), ('866', 'Cao Lãnh'), ('867', 'Sa Đéc'), ('868', 'Hồng Ngự'), ('869', 'Tân Hồng'), ('870', 'Hồng Ngự'), ('871', 'Tam Nông'), ('872', 'Tháp Mười'), ('873', 'Cao Lãnh'), ('874', 'Thanh Bình'), ('875', 'Lấp Vò'), ('876', 'Lai Vung'), ('877', 'Châu Thành'), ('883', 'Long Xuyên'), ('884', 'Châu Đốc'), ('886', 'An Phú'), ('887', 'Tân Châu'), ('888', 'Phú Tân'), ('889', 'Châu Phú'), ('890', 'Tịnh Biên'), ('891', 'Tri Tôn'), ('892', 'Châu Thành'), ('893', 'Chợ Mới'), ('894', 'Thoại Sơn'), ('899', 'Rạch Giá'), ('900', 'Hà Tiên'), ('902', 'Kiên Lương'), ('903', 'Hòn Đất'), ('904', 'Tân Hiệp'), ('905', 'Châu Thành'), ('906', 'Giồng Riềng'), ('907', 'Gò Quao'), ('908', 'An Biên'), ('909', 'An Minh'), ('910', 'Vĩnh Thuận'), ('911', 'Phú Quốc'), ('912', 'Kiên Hải'), ('913', 'U Minh Thượng'), ('914', 'Giang Thành'), ('916', 'Ninh Kiều'), ('917', 'Ô Môn'), ('918', 'Bình Thuỷ'), ('919', 'Cái Răng'), ('923', 'Thốt Nốt'), ('924', 'Vĩnh Thạnh'), ('925', 'Cờ Đỏ'), ('926', 'Phong Điền'), ('927', 'Thới Lai'), ('930', 'Vị Thanh'), ('931', 'Ngã Bảy'), ('932', 'Châu Thành A'), ('933', 'Châu Thành'), ('934', 'Phụng Hiệp'), ('935', 'Vị Thuỷ'), ('936', 'Long Mỹ'), ('937', 'Long Mỹ'), ('941', 'Sóc Trăng'), ('942', 'Châu Thành'), ('943', 'Kế Sách'), ('944', 'Mỹ Tú'), ('945', 'Cù Lao Dung'), ('946', 'Long Phú'), ('947', 'Mỹ Xuyên'), ('948', 'Ngã Năm'), ('949', 'Thạnh Trị'), ('950', 'Vĩnh Châu'), ('951', 'Trần Đề'), ('954', 'Bạc Liêu'), ('956', 'Hồng Dân'), ('957', 'Phước Long'), ('958', 'Vĩnh Lợi'), ('959', 'Giá Rai'), ('960', 'Đông Hải'), ('961', 'Hoà Bình'), ('964', 'Cà Mau'), ('966', 'U Minh'), ('967', 'Thới Bình'), ('968', 'Trần Văn Thời'), ('969', 'Cái Nước'), ('970', 'Đầm Dơi'), ('971', 'Năm Căn'), ('972', 'Phú Tân'), ('973', 'Ngọc Hiển')], max_length=50, verbose_name='Quận/Huyện *')),
                ('ward', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phường/Xã')),
                ('urban_area', models.CharField(blank=True, max_length=100, null=True, verbose_name='Khu đô thị/Khu dân cư')),
                ('street', models.CharField(help_text='Nhập tên Đường/Phố/Thôn/Xóm', max_length=125, null=True, verbose_name='Tên đường, phố *')),
                ('address', models.CharField(help_text='Đầy đủ định dạng sau mới được duyệt: Ngõ/Ngách/Hẻm/Số nhà, Khu dân cư, Phố, Quận/Huyện, Tỉnh/TP', max_length=255, verbose_name='Địa chỉ đầy đủ *')),
                ('condition', models.CharField(blank=True, choices=[('new', 'Xây mới'), ('old', 'Nhà cũ'), ('raw', 'Xây thô'), ('land', 'Đất nền'), ('other', 'Khác')], max_length=20, null=True, verbose_name='Tình trạng BĐS')),
                ('construction', models.CharField(blank=True, choices=[('release', 'Đã hoàn thiện'), ('under_construction', 'Đang thi công'), ('pre_release', 'Sắp thi công'), ('other', 'Khác')], max_length=20, null=True, verbose_name='Tình trạng xây dựng')),
                ('year', models.CharField(blank=True, help_text='Điền năm hoàn thành xây dựng và Tỷ lệ % sử dụng còn lại', max_length=50, null=True, verbose_name='Năm xây dựng và tỉ lệ sử dụng còn lại')),
                ('road_type', models.CharField(choices=[('alley_car_2', 'Ô tô tránh'), ('alley_car_tribike', 'Ô tô tránh Ba gác'), ('alley_car', 'Ô tô'), ('alley_tribike', 'Ngõ Ba gác'), ('alley_tribike_bike', 'Ngõ Ba gác tránh Xe máy'), ('alley_bike', 'Ngõ Xe máy tránh nhau')], default='alley_car_tribike', max_length=20, verbose_name='Đường/Ngõ trước nhà *')),
                ('lane_width', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Chiều rộng đường/ngõ (m)')),
                ('parking_type', models.CharField(blank=True, choices=[('garage', 'Có gara ô tô'), ('off_street', 'Đỗ trước nhà'), ('street', 'Đỗ ngoài đường'), ('none', 'Không có chỗ đỗ'), ('other', 'Khác')], max_length=20, null=True, verbose_name='Có chỗ đỗ ô tô không?')),
                ('area', models.DecimalField(decimal_places=1, max_digits=10, verbose_name='Diện tích *')),
                ('floors', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], default='0', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Số tầng *')),
                ('width', models.DecimalField(decimal_places=1, max_digits=5, null=True, verbose_name='Mặt tiền *')),
                ('price', models.DecimalField(decimal_places=2, help_text='Nếu Bán đơn vị tính là Tỷ, Cho thuê đơn vị là Triệu', max_digits=9, verbose_name='Giá *')),
                ('receive_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Giá thu về (tỷ)')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Giá Hạ chào (tỷ)')),
                ('average_price', models.DecimalField(blank=True, decimal_places=0, max_digits=9, null=True, verbose_name='Giá/m2 (triệu)')),
                ('length', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Chiều dài')),
                ('area_real', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Diện tích thực tế')),
                ('bedrooms', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99)], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Số phòng ngủ')),
                ('bathrooms', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99)], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Số phòng tắm')),
                ('direction', models.CharField(blank=True, choices=[('east', 'Đông'), ('south-east', 'Đông - Nam'), ('south', 'Nam'), ('south-west', 'Tây - Nam'), ('west', 'Tây'), ('north-west', 'Tây - Bắc'), ('north', 'Bắc'), ('north-east', 'Đông - Bắc')], max_length=20, null=True, verbose_name='Hướng')),
                ('code', models.CharField(default='NPHH22083030', help_text='Chữ cái đầu Loại BĐS + tên viết tắt Chuyên viên + 2 số cuối Năm Tháng + Diện tích + Giá', max_length=80, unique=True, verbose_name='Mã BĐS (VIẾT HOA) *')),
                ('title', models.CharField(help_text='Gợi ý: Từ khoá + Vị trí (Đường/Phố/Khu) + Diện tích + Tiện ích + Giá + Sổ', max_length=200, verbose_name='Tiêu đề (VIẾT HOA) *')),
                ('description', models.TextField(default='=> Chú ý: Thông tin được đăng bởi/trên Thế Giới Nhà Phố đều là thật, xác thực chính xác.', verbose_name='Mô tả bất động sản cho khách hàng *')),
                ('salient_features', models.TextField(blank=True, help_text='Nêu tất cả các ưu điểm nổi bật của BĐS', null=True, verbose_name='Đặc điểm nổi bật')),
                ('location_advantage', models.TextField(blank=True, help_text='Mô tả ưu điểm của vị trí, gần địa điểm nổi tiếng, dễ nhớ nào, khoảng bao nhiêu phút ra trung tâm, đường chính, hồ, bến tàu, xe, sân vận động, rạp chiếu phim..', null=True, verbose_name='Ưu điểm vị trí')),
                ('furniture_design', models.TextField(blank=True, help_text='Thiết kế hiện đại, đầy đủ công năng, khung cột bê tông chắc chắn hay không, Có hay không có nội thất kèm theo, kèm theo những nội thất', null=True, verbose_name='Nội thất, thiết kế')),
                ('living_facilities', models.TextField(blank=True, help_text='Có bể bơi, phòng xông hơi, xem phim, thể thao, có chỗ đỗ xe hơi,...', null=True, verbose_name='Tiện ích sinh hoạt trong nhà')),
                ('residential_community', models.TextField(blank=True, help_text='Cộng đồng dân cư dân trí cao, văn minh, an ninh, thân thiện hay không', null=True, verbose_name='Cộng đồng dân cư')),
                ('regional_welfare', models.TextField(blank=True, help_text='Gần trường mầm non, tiểu học, THCS,...Bệnh viện, Trung tâm spa, chăm sóc sức khoẻ, sắc đẹp...', null=True, verbose_name='An sinh, tiện ích khu vực')),
                ('furnish_type', models.CharField(blank=True, choices=[('furnished', 'Đủ đồ đạc'), ('semi_furnished', 'Một số đồ đạc'), ('unfurnished', 'Không có đồ đạc')], default='semi_furnished', max_length=20, null=True, verbose_name='Có kèm đồ đạc?')),
                ('registration_type', models.CharField(choices=[('red_pink_book', 'Sổ Đỏ/ Sổ hồng'), ('valid_documents', 'Giấy tờ hợp lệ'), ('construction_license', 'Giấy phép xây dựng'), ('business_license', 'Giấy phép kinh doanh'), ('prepare_book', 'Chuẩn bị làm sổ'), ('dont_book', 'Chưa có sổ'), ('other', 'Khác')], default='red_pink_book', max_length=20, verbose_name='Loại chứng nhận *')),
                ('bonus_rate', models.DecimalField(blank=True, decimal_places=1, default='3', max_digits=2, null=True, verbose_name='Tỷ lệ trích thưởng (%)')),
                ('reward', models.DecimalField(blank=True, decimal_places=0, default='100', max_digits=5, null=True, verbose_name='Số tiền trích thưởng (triệu)')),
                ('reward_person', models.CharField(blank=True, help_text='Tên người chủ sở hữu BĐS. Ví dụ Nguyễn Văn A. Nếu BĐS của ĐC thì ghi tên của Chuyên viên ĐC và tên Cty', max_length=100, verbose_name='Tên chủ sở hữu BĐS')),
                ('reward_person_mobile', models.CharField(blank=True, help_text='Số ĐT chủ sở hữu BĐS, ví dụ 0916286256', max_length=50, verbose_name='Số ĐT chủ sở hữu BĐS hoặc của Chuyên viên ĐC')),
                ('extra_data', models.TextField(blank=True, help_text='Ghi các thông tin mô tả đầy đủ của đầu chủ về chủ nhà hoặc các yếu tố khác liên quan đến tương tác với Chuyên viên...', null=True, verbose_name='Mô tả bđs của chuyên viên')),
                ('status', models.CharField(choices=[('selling', 'Còn bán'), ('sale', 'Hạ chào'), ('sold', 'Đã bán'), ('stop_selling', 'Dừng bán')], default='selling', max_length=20, verbose_name='Trạng thái giao dịch *')),
                ('date_created', models.DateField(default=datetime.datetime.now, verbose_name='Ngày lên hàng *')),
                ('date_update', models.DateField(default=datetime.datetime.now, verbose_name='Ngày cập nhật *')),
                ('priority', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)], default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Ưu tiên đăng')),
                ('is_exclusive', models.BooleanField(default=False, verbose_name='THẾ GIỚI NHÀ PHỐ ĐỘC QUYỀN')),
                ('is_advertising', models.BooleanField(default=False, verbose_name='LÀ TIN RAO VẶT')),
                ('is_published', models.BooleanField(default=True, verbose_name='CHO PHÉP ĐĂNG')),
                ('is_verified', models.BooleanField(default=False, verbose_name='ĐÃ XÁC THỰC')),
                ('exhaustive', models.CharField(choices=[('not', 'Chưa khảo sát'), ('prepare', 'Lên lịch chuẩn bị khảo sát'), ('investigated', 'Đã khảo sát')], default='not', max_length=20, verbose_name='Trạng thái khảo sát')),
                ('expert_comments', models.TextField(blank=True, help_text='Chuyên gia đi khảo sát viết nhận xét nối tiếp ở đây', null=True, verbose_name='Nhận xét khảo sát')),
                ('liquidity_classification', models.CharField(choices=[('super', 'A+_Cực dễ bán'), ('easy', 'A_Dễ bán'), ('normal', 'B_Bình thường'), ('hard', 'C_Khó bán'), ('very_hard', 'C_Rất khó bán'), ('not_rate', 'Chưa đánh giá')], default='not_rate', max_length=20, verbose_name='Phân loại thanh khoản')),
                ('location', location_field.models.spatial.LocationField(default=django.contrib.gis.geos.point.Point(105.83549388560711, 20.976795401917798), help_text='Nhập toạ độ hoặc chọn vị trí trên bản đồ', null=True, srid=4326, verbose_name='Toạ độ vị trí BĐS')),
                ('realtor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='realtors.realtor', verbose_name='Chuyên viên quản lý BĐS')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='Người thêm BĐS')),
            ],
            options={
                'verbose_name': 'Bất động sản',
                'verbose_name_plural': 'Bất động sản',
            },
            bases=(models.Model, FunctionModule.hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='ListingVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', embed_video.fields.EmbedVideoField(blank=True, null=True, verbose_name='Link video')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.listing', verbose_name='BĐS')),
            ],
            options={
                'verbose_name': 'Đường dẫn video Youtube',
                'verbose_name_plural': 'Đường dẫn video Youtube',
            },
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=0, verbose_name='Thứ tự hiện')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Thông tin')),
                ('photo', models.ImageField(upload_to=FunctionModule.listings.models.get_image_path, verbose_name='Ảnh BĐS')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.listing', verbose_name='ẢNH CHỤP BĐS')),
            ],
            options={
                'verbose_name': 'Ảnh chụp BDS',
                'verbose_name_plural': 'Ảnh Bất động sản',
            },
        ),
        migrations.CreateModel(
            name='ListingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Nhập theo định dạng: Ngõ.Ngách.Hẻm.Số nhà, Khu dân cư, Phố, Quận/Huyện, Tỉnh/TP', max_length=255, verbose_name='Địa chỉ đầy đủ')),
                ('area', models.DecimalField(decimal_places=1, max_digits=10, verbose_name='Diện tích (m2)')),
                ('floors', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], default='0', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Số tầng')),
                ('width', models.DecimalField(decimal_places=1, max_digits=5, null=True, verbose_name='Mặt tiền (m)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Giá chào (tỷ)')),
                ('bedrooms', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99)], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Số phòng ngủ')),
                ('bathrooms', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99)], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Số phòng tắm')),
                ('reward_person', models.CharField(blank=True, help_text='Tên người chủ sở hữu BĐS. Ví dụ Nguyễn Văn A. Nếu BĐS của ĐC thì ghi tên của Chuyên viên ĐC và tên Cty', max_length=100, verbose_name='Tên chủ sở hữu BĐS')),
                ('reward_person_mobile', models.CharField(blank=True, help_text='Số ĐT chủ sở hữu BĐS, ví dụ 0916286256', max_length=50, verbose_name='Số ĐT chủ sở hữu BĐS hoặc của Chuyên viên ĐC')),
                ('extra_data', models.TextField(blank=True, help_text='Ghi các thông tin mô tả đầy đủ của đầu chủ về chủ nhà hoặc các yếu tố khác liên quan đến tương tác với Chuyên viên...', null=True, verbose_name='Mô tả bđs của chuyên viên')),
                ('warehouse', models.CharField(blank=True, max_length=100, verbose_name='Kho hàng')),
                ('date_created', models.DateField(default=datetime.datetime.now, verbose_name='Ngày tạo lịch sử BĐS')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.listing', verbose_name='Bất động sản gốc')),
                ('realtor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='realtors.realtor', verbose_name='Chuyên viên quản lý BĐS')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='Người thêm BĐS')),
            ],
            options={
                'verbose_name': 'Biến động Bất động sản',
                'verbose_name_plural': 'Biến động Bất động sản',
            },
        ),
        migrations.CreateModel(
            name='ContractImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=0, verbose_name='Thứ tự hiện')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Thông tin')),
                ('image', models.ImageField(upload_to=FunctionModule.listings.models.get_image_path, verbose_name='Link Ảnh')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.listing', verbose_name='ẢNH HỢP ĐỒNG TRÍCH THƯỞNG & PHIẾU KHẢO SÁT BĐS')),
            ],
            options={
                'verbose_name': 'Ảnh kín bđs',
                'verbose_name_plural': 'Ảnh hợp đồng, sổ đỏ,...',
            },
        ),
        migrations.AddIndex(
            model_name='listing',
            index=django.contrib.postgres.indexes.GinIndex(fields=['street', 'address'], name='listings_li_street_3c6499_gin'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=django.contrib.postgres.indexes.GinIndex(fields=['street', 'code'], name='listings_li_street_8ec4e8_gin'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=django.contrib.postgres.indexes.BTreeIndex(fields=['code'], name='listings_li_code_013a35_btree'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=django.contrib.postgres.indexes.BTreeIndex(fields=['bedrooms', 'bathrooms', 'direction'], name='listings_li_bedroom_14151d_btree'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['state', 'district', 'ward'], name='listings_li_state_6f187a_idx'),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(fields=['house_type', 'transaction_type'], name='listings_li_house_t_a0d1ef_idx'),
        ),
    ]
